(*open Alcotest*)
(*open Unipoly*)
(*open Square*)

(*(* Test de création et accès aux attributs d'un cours *)*)
(*(*let test_create_cours () =*)*)
(*(*  let cours = create_cours Math 100 "Calculus" in*)*)
(*(*  match cours with*)*)
(*(*  | Buyable { type_square = Cours c; _ } ->*)*)
(*(*      check string "Nom du cours" "Calculus" (get_name c);*)*)
(*(*      check int "Prix du cours" 100 (price_buyable (Cours c));*)*)
(*(*      check (option int) "Degré initial du cours" None (Some (match get_degre c with None -> None | Some _ -> None));*)*)
(*(*      check (option int) "Propriétaire initial du cours" None (match cours with Buyable b -> b.proprietaire_index | _ -> None)*)*)
(*(*  | _ -> fail "Création de cours échouée"*)*)

(*(* Test de création et accès aux attributs d'une bibliothèque *)*)
(*(*let test_create_library () =*)*)
(*(*  let library = create_library "Main Library" in*)*)
(*(*  match library with*)*)
(*(*  | Buyable { type_square = Library l; _ } ->*)*)
(*(*      check string "Nom de la bibliothèque" "Main Library" (get_name_restaurant l)*)*)
(*(*  | _ -> fail "Création de bibliothèque échouée"*)*)

(*(* Test de création et accès aux attributs d'un restaurant *)*)
(*let test_create_restaurant () =*)
(*  let restaurant = create_restaurant "Gourmet Bistro" in*)
(*  match restaurant with*)
(*  | Buyable { type_square = Restaurant r; _ } ->*)
(*      check string "Nom du restaurant" "Gourmet Bistro" (get_name_restaurant r)*)
(*  | _ -> fail "Création de restaurant échouée"*)

(*(* Test du calcul du prix d'achat d'une propriété *)*)
(*let test_price_buyable () =*)
(*  let cours = create_cours Math 120 "Maths 101" in*)
(*  let library = create_library "Central Library" in*)
(*  let restaurant = create_restaurant "Cafe 101" in*)
(*  match (cours, library, restaurant) with*)
(*  | Buyable { type_square = Cours c; _ }, Buyable { type_square = Library _; _ }, Buyable { type_square = Restaurant _; _ } ->*)
(*      check int "Prix d'un cours" 120 (price_buyable (Cours c));*)
(*      check int "Prix d'une bibliothèque" 200 (price_buyable (Library {name = "Test Library"}));*)
(*      check int "Prix d'un restaurant" 150 (price_buyable (Restaurant {name = "Test Restaurant"}))*)
(*  | _ -> fail "Calcul du prix échoué"*)

(*(* Test du calcul de la taxe *)*)
(*let test_get_tax_amount () =*)
(*  let tax_square = create_tax 300 "Taxe sur la richesse" in*)
(*  check int "Montant de la taxe" 300 (get_tax_amount tax_square);*)
(*  let house = House in*)
(*  check int "Taxe sur une case non taxable" 0 (get_tax_amount house)*)

(*(* Test de changement de propriétaire d'une propriété achetable *)*)
(*let test_change_owner () =*)
(*  let cours = create_cours Math 120 "Maths 101" in*)
(*  match cours with*)
(*  | Buyable b ->*)
(*      let cours_with_owner = change_owner b (Some 1) in*)
(*      check (option int) "Propriétaire modifié" (Some 1) (match cours_with_owner with Buyable b -> b.proprietaire_index | _ -> None)*)
(*  | _ -> fail "Modification du propriétaire échouée"*)

(*(* Test du nom d'une case *)*)
(*let test_name_square () =*)
(*  let cours = create_cours Math 120 "Maths 101" in*)
(*  let tax_square = create_tax 300 "Wealth Tax" in*)
(*  check string "Nom d'une case de cours" "Maths 101" (name_square cours);*)
(*  check string "Nom d'une case de taxe" "Wealth Tax" (name_square tax_square);*)
(*  check string "Nom d'une case maison" "Maison" (name_square House);*)
(*  check string "Nom d'une case email" "Email" (name_square Email)*)

(*(* Groupe de tests pour le module Square *)*)
(*let () =*)
(*  run "Square tests" [*)
(*(*    "Cours", [test_case "Création d'un cours" `Quick test_create_cours];*)*)
(*(*    "Library", [test_case "Création d'une bibliothèque" `Quick test_create_library];*)*)
(*    "Restaurant", [test_case "Création d'un restaurant" `Quick test_create_restaurant];*)
(*    "Price", [test_case "Calcul du prix d'achat" `Quick test_price_buyable];*)
(*    "Tax", [test_case "Montant de la taxe" `Quick test_get_tax_amount];*)
(*    "Owner", [test_case "Changement de propriétaire" `Quick test_change_owner];*)
(*    "Square Name", [test_case "Nom de la case" `Quick test_name_square];*)
(*  ]*)
